name: Cron

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"

jobs:
  cron:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]
        poetry-version: [1.5.1]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Run
        env:
          LOGURU_LEVEL: INFO
          INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
          INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          poetry install
          poetry run python main.py --write-cost --send-slack >> wise.txt

#       - uses: exuanbo/actions-deploy-gist@v1
#         with:
#           token: ${{ secrets.GIST_TOKEN }}
#           gist_id: ${{ vars.GIST_ID }}
#           file_path: wise.txt
#           file_type: text
          

      - uses: danielmcconville/gist-sync-file-action@v1.0.0
        with:
          gistPat: ${{ secrets.GIST_TOKEN }}
          action: update
          filename: wise.txt
          gistId: ${{ vars.GIST_ID }}
          # optional, used with the download action. Create the gist if it does not exist, you must supply a filename if setting this to true
          createIfNotExists: true
